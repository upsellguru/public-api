openapi: 3.0.1
info:
  title: UpsellGuru Public API
  version: 1.0.0
servers:
  - url: 'https://api.upsellguru.com'

tags:
  - name: hotels
    description: Hotels configured in UpsellGuru
  - name: roomTypes
    description: Room Types configured in UpsellGuru
  - name: extraTypes
    description: Extra Types configured in UpsellGuru
  - name: upgradeBids
    description: Upgrade Bids placed on UpsellGuru
  - name: bookedExtras
    description: Booked Extras purchased on UpsellGuru
  - name: users
    description: users with access to UpsellGuru Extranet
  - name: availability
    description: Room Type availability

paths:
  /hotels:
    get:
      tags:
        - hotels
      operationId: getHotels
      description: Retrieve list of hotels the API account has access to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfHotel'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /upgrade_bids:
    get:
      tags:
        - upgradeBids
      operationId: getUpgradeBidsList
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
        - in: query
          name: dateFrom
          required: true
          description: Transaction date from
          schema:
            type: string
            format: date
        - in: query
          name: dateTo
          required: true
          description: Transaction date to
          schema:
            type: string
            format: date
      description: Retrieve list of upgrade bids by hotel Id the API account has access to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfUpgradeBid'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
    post:
      tags:
        - upgradeBids
      operationId: saveUpgradeBid
      description: Create a new Upgrade Bid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveUpgradeBidRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  upgradeBid:
                    $ref: '#/components/schemas/UpgradeBid'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /upgrade_bids/change_status/{upgradeBidId}:
    post:
      tags:
        - upgradeBids
      operationId: changeUpgradeBidStatus
      parameters:
        - in: path
          name: upgradeBidId
          required: true
          description: The Upgrade Bid ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOfUpgradeBidStatusRequest'
      description: Change the status of an upgrade bid
      responses:
        '204':
          description: OK
          content: {}
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /booked_extras:
    get:
      tags:
        - bookedExtras
      operationId: getBookedExtrasList
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
        - in: query
          name: dateFrom
          required: true
          description: Transaction date from
          schema:
            type: string
            format: date
        - in: query
          name: dateTo
          required: true
          description: Transaction date to
          schema:
            type: string
            format: date
      description: Retrieve list of booked extras by hotel Id the API account has access to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookedExtra'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
    post:
      tags:
        - bookedExtras
      operationId: saveBookedExtra
      description: Create a new booked extra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveBookedExtraRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookedExtra:
                    $ref: '#/components/schemas/BookedExtra'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /room_types:
    get:
      tags:
        - roomTypes
      operationId: getRoomTypesList
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRoomType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: []
    post:
      tags:
        - roomTypes
      operationId: createRoomType
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
      description: Create a new room type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicRoomType'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /room_types/{roomTypeId}:
    post:
      tags:
        - roomTypes
      operationId: updateRoomTypes
      parameters:
        - in: path
          name: roomTypeId
          required: true
          description: The Room Type ID
          schema:
            type: integer
      description: Update an existing room type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicRoomType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /extra_types:
    get:
      tags:
        - extraTypes
      operationId: getExtraTypesList
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfExtraType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
    post:
      tags:
        - extraTypes
      operationId: createExtraType
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
      description: Create a new room type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicExtraType'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /extra_types/{extraTypeId}:
    post:
      tags:
        - extraTypes
      operationId: updateExtraTypes
      parameters:
        - in: path
          name: extraTypeId
          required: true
          description: The Extra Type ID
          schema:
            type: integer
      description: Update an existing extra type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicExtraType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /reservations:
    post:
      tags:
        - reservations
      operationId: saveReservation
      description: Create or update reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicReservation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSaved'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
    get:
      tags:
        - reservations
      operationId: getReservationsList
      description: Retrieve list of reservations stored in UpsellGuru by hotel Id the API account has access to
      parameters:
        - in: query
          name: hotelId
          required: true
          description: The Hotel ID
          schema:
            type: integer
        - in: query
          name: checkinDate
          required: false
          description: The Checkin Date
          schema:
            type: string
            format: date
        - in: query
          name: checkoutDate
          required: false
          description: The Checkout Date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfReservation'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /reservations/{reservationUuid}:
    get:
      tags:
        - reservations
      operationId: getReservation
      description: Retrieve a specific reservation stored in UpsellGuru
      parameters:
        - in: path
          name: reservationUuid
          required: true
          description: The Reservation Identifier
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /reservations/create_upsell/{reservationUuid}:
    post:
      tags:
        - reservations
      operationId: createReservationUpsell
      description: Create a reservation upsell
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationUpsellUrls'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /reservations/add_event/{reservationUuid}:
    post:
      tags:
        - reservations
      operationId: addReservationEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReservationEventRequest'
      parameters:
        - in: path
          name: reservationUuid
          required: true
          description: The Reservation UUID
          schema:
            type: string
            format: uuid
      description: Add a new event to a reservation
      responses:
        '204':
          description: OK
          content: {}
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /reservations/purchasable_extra_types/{reservationUuid}:
    get:
      tags:
        - reservations
      operationId: getReservationPurchasableExtraTypes
      parameters:
        - in: path
          name: reservationUuid
          required: true
          description: The Reservation UUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfExtraType'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /users:
    get:
      tags:
        - users
      operationId: getUsers
      parameters:
        - in: query
          name: hotelId
          required: false
          description: The Hotel ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfUser'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
    post:
      tags:
        - users
      operationId: createUser
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicUser'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /users/{userId}:
    post:
      tags:
        - users
      operationId: updateUser
      parameters:
        - in: path
          name: userId
          required: true
          description: The User ID
          schema:
            type: integer
      description: Update an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicUser'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /users/generate_access_token/{userId}:
    post:
      tags:
        - users
      operationId: generateUserAccessToken
      parameters:
        - in: path
          name: userId
          required: true
          description: The User ID
          schema:
            type: integer
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccessToken'
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
  /availability:
    post:
      tags:
        - availability
      operationId: pushAvailability
      description: Create or update room type availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelAvailability'
      responses:
        '204':
          description: OK
          content: { }
        '400':
          description: Validation Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Security Exception
          content: { }
        '403':
          description: Security Exception
          content: { }
      security:
        - apiKey: [ ]
components:
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    ArrayOfHotel:
      type: array
      items:
        $ref: "#/components/schemas/Hotel"
    Hotel:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/HotelStatus"
        name:
          type: string
        shortName:
          type: string
        city:
          type: string
        country:
          type: string
        currency:
          type: string
        languages:
          type: array
          items:
            $ref: "#/components/schemas/LanguageCode"
    HotelStatus:
      type: string
      description: Hotel status
      enum:
        - ONLINE
        - OFFLINE
        - ONBOARDING
    ArrayOfReservation:
      type: array
      items:
        $ref: "#/components/schemas/ReservationLite"
    ReservationStatus:
      type: string
      description: This enum describes all possible status a reservation can be in UpsellGuru
      enum:
        - TENTATIVE
        - CONFIRMED
        - INHOUSE
        - CHECKEDOUT
        - CANCELLED
        - NOSHOW
    ReservationLite:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/ReservationStatus"
        roomTypeCode:
          type: string
        bookedRoomTypeCode:
          type: string
        checkin:
          type: string
          format: date
        checkout:
          type: string
          format: date
        reference:
          type: string
        ratePlan:
          type: string
        marketSegment:
          type: string
        reservationSource:
          type: string
    BasicReservation:
      type: object
      properties:
        hotelId:
          type: integer
        checkin:
          type: string
          format: date
        checkout:
          type: string
          format: date
        reference:
          type: string
          description: Reservation identifier in the PMS or other systems acting as source of truth.
        status:
          $ref: "#/components/schemas/ReservationStatus"
        roomTypeCode:
          type: string
        guestName:
          type: string
        guestSurname:
          type: string
        email:
          type: string
        adults:
          type: integer
        children:
          type: integer
        language:
          $ref: "#/components/schemas/LanguageCode"
        ratePlan:
          type: string
        marketSegment:
          type: string
        reservationSource:
          type: string
        includedExtraCodes:
          type: array
          description: List of string codes e.g. BRKF, EARLY, LATE etc or their numeric identifiers
          items:
            type: string
        metadata:
          type: object
          additionalProperties: true
      required:
        - hotelId
        - checkin
        - checkout
        - reference
        - status
        - roomTypeCode
        - adults
        - language
    Reservation:
      allOf:
        - $ref: "#/components/schemas/BasicReservation"
        - type: object
          properties:
            uuid:
              type: string
              description: Reservation identifier generated by UpsellGuru
          required:
            - uuid
    ReservationSaved:
      type: object
      properties:
        reservationUuid:
          type: string
          format: uuid
    ReservationUpsellUrls:
      type: object
      properties:
        url:
          type: string
          format: url
        roomsUrl:
          type: string
          format: url
        extrasUrl:
          type: string
          format: url
    NewReservationEventRequest:
      type: object
      properties:
        eventType:
          $ref: "#/components/schemas/ReservationEventTypeEnum"
    ReservationEventTypeEnum:
      type: string
      enum:
        - DATES_CHANGED
        - PRE_ARRIVAL_UPSELLING_EMAIL_SENT
        - PRE_ARRIVAL_UPSELLING_EMAIL_BOUNCED
        - PRE_ARRIVAL_UPSELLING_EMAIL_SPAM
        - PRE_ARRIVAL_UPSELLING_EMAIL_DELIVERED
        - PRE_ARRIVAL_UPSELLING_EMAIL_OPENED
        - PRE_ARRIVAL_UPSELLING_EMAIL_CLICKED
        - PRE_ARRIVAL_CONCIERGE_SENT
        - PRE_ARRIVAL_CONCIERGE_OPENED
        - PRE_ARRIVAL_CONCIERGE_CLICKED
        - REGISTRATION_CARD_SENT
        - REGISTRATION_CARD_OPENED
        - REGISTRATION_CARD_CLICKED
        - REGISTRATION_CARD_SUBMITTED
        - REGISTRATION_CARD_REMINDER_SENT
        - REGISTRATION_CARD_REMINDER_OPENED
        - REGISTRATION_CARD_REMINDER_CLICKED
        - ROOM_CHANGED_IN_PMS
        - BOOKED_EXTRA_CONFIRMATION_CLICKED_RETARGETING
        - UPGRADE_BID_ACCEPTED_CLICKED_RETARGETING
        - UPGRADE_BID_DENIED_CLICKED_RETARGETING
        - UPGRADE_BIDS_CONFIRMATION_CLICKED_RETARGETING
        - PRE_ARRIVAL_UPSELLING_SMS_CLICKED
        - PRE_ARRIVAL_UPSELLING_SMS_DELIVERED
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_SENT
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_DELIVERED
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_BOUNCED
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_OPENED
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_SPAM
        - PRE_ARRIVAL_UPSELLING_REMINDER_EMAIL_CLICKED
        - ROOM_UPGRADE_ALTERNATIVE_UPGRADE_CREATED
        - ROOM_UPGRADE_ALTERNATIVE_UPGRADE_EMAIL_OPENED
        - ROOM_UPGRADE_ALTERNATIVE_UPGRADE_EMAIL_CLICKED
        - ROOM_UPGRADE_ALTERNATIVE_UPGRADE_ACCEPTED
        - ROOM_UPGRADE_ALTERNATIVE_UPGRADE_REJECTED
        - CHECKED_IN
        - CANCELLED
        - NO_SHOW
        - INHOUSE_EXTRAS_SELECTED
        - FIRST_INHOUSE_EMAIL_SENT
        - FIRST_INHOUSE_EMAIL_DELIVERED
        - FIRST_INHOUSE_EMAIL_OPENED
        - FIRST_INHOUSE_EMAIL_CLICKED
        - SECOND_INHOUSE_EMAIL_SENT
        - SECOND_INHOUSE_EMAIL_DELIVERED
        - SECOND_INHOUSE_EMAIL_OPENED
        - SECOND_INHOUSE_EMAIL_CLICKED
        - THIRD_INHOUSE_EMAIL_SENT
        - THIRD_INHOUSE_EMAIL_DELIVERED
        - THIRD_INHOUSE_EMAIL_OPENED
        - THIRD_INHOUSE_EMAIL_CLICKED
        - FIRST_INHOUSE_SMS_DELIVERED
        - FIRST_INHOUSE_SMS_CLICKED
        - SECOND_INHOUSE_SMS_DELIVERED
        - SECOND_INHOUSE_SMS_CLICKED
        - THIRD_INHOUSE_SMS_DELIVERED
        - THIRD_INHOUSE_SMS_CLICKED
        - FIRST_INHOUSE_SMS_SENT
        - SECOND_INHOUSE_SMS_SENT
        - THIRD_INHOUSE_SMS_SENT
        - RESERVATION_CANCELLATION_SENT
        - RESERVATION_CANCELLATION_OPENED
        - RESERVATION_CANCELLATION_CLICKED
        - CHECKED_OUT
        - UNSUBSCRIBED
        - CHATBOT_CLICK
        - PMS_UPDATE
        - ROOM_UPGRADES_STARTED_BIDDING
        - ROOM_UPGRADES_SKIP
        - ROOM_UPGRADES_NO_BIDS
        - ROOM_UPGRADES_WITH_BIDS
        - ROOM_UPGRADE_BIDS_EXPIRED
        - PRE_ARRIVAL_UPSELLING_EXTRAS_SELECTED
        - PRE_ARRIVAL_UPSELLING_EXTRAS_EMPTY
        - PRE_ARRIVAL_UPSELLING_EXTRAS_ADDED
        - PRE_ARRIVAL_UPSELLING_TRANSACTION
        - ROOM_UPGRADE_BID_ACCEPTED
        - ROOM_UPGRADE_BID_REJECTED
        - ON_REQUEST_EXTRA_CONFIRMED
        - ROOM_UPGRADE_BID_SYSTEM_ACCEPTED
        - ROOM_UPGRADE_BID_SYSTEM_REJECTED
        - ROOM_UPGRADE_CANCELLED
        - POSTSTAY_SENT
        - POSTSTAY_OPENED
        - POSTSTAY_CLICKED
    BookedExtra:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/BookedExtraStatus"
        extraType:
          $ref: "#/components/schemas/ExtraTypeLite"
        amount:
          $ref: "#/components/schemas/Money"
        quantity:
          type: integer
        reservation:
          $ref: "#/components/schemas/ReservationLite"
    BookedExtraStatus:
      type: string
      description: This enum describes all possible status a booked extra can be in UpsellGuru
      enum:
        - CONFIRMED
        - REJECTED
        - PENDING
        - EXPIRED
        - CANCELLED
    ArrayOfBookedExtra:
      type: array
      items:
        $ref: "#/components/schemas/BookedExtra"
    UpgradeBid:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/UpgradeBidStatus"
        fromRoomType:
          $ref: "#/components/schemas/RoomTypeLite"
        toRoomType:
          $ref: "#/components/schemas/RoomTypeLite"
        amount:
          $ref: "#/components/schemas/Money"
        strength:
          type: integer
          minimum: 0
          maximum: 4
        reservation:
          $ref: "#/components/schemas/ReservationLite"
        deniedReason:
          $ref: "#/components/schemas/UpgradeBidDeniedReason"
    UpgradeBidStatus:
      type: string
      description: This enum describes all possible status an upgrade bid can be in UpsellGuru
      enum:
        - ACCEPTED
        - CANCELLED
        - EXPIRED
        - PENDING
        - REJECTED
    ValidNewUpgradeBidStatus:
      type: string
      description: This enum describes all possible status an upgrade bid can be submitted to UpsellGuru
      enum:
        - ACCEPTED
        - CANCELLED
        - REJECTED
    UpgradeBidDeniedReason:
      type: string
      nullable: true
      description: This enum describes all possible reasons that an upgrade bid can be denied in UpsellGuru
      enum:
        - LIMITED_ROOM_TYPE_AVAILABILITY
        - NO_ROOM_TYPE_AVAILABILITY
        - OFFER_TOO_WEAK
        - GUEST_CANT_BE_UPGRADED
        - PAYMENT_NOT_RECEIVED
    ChangeOfUpgradeBidStatusRequest:
      type: object
      properties:
        toStatus:
          $ref: "#/components/schemas/ValidNewUpgradeBidStatus"
        deniedReason:
          $ref: "#/components/schemas/UpgradeBidDeniedReason"
    ArrayOfUpgradeBid:
      type: array
      items:
        $ref: "#/components/schemas/UpgradeBid"
    ArrayOfRoomType:
      type: array
      items:
        $ref: "#/components/schemas/RoomType"
    RoomType:
      allOf:
        - $ref: "#/components/schemas/BasicRoomType"
        - type: object
          properties:
            id:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            hotelId:
              type: integer
            isNotMapped:
              type: boolean
              description: If true, this room type was created after receiving a reservation with a room type code not previously mapped
            hasUpgradePricesConfigured:
              type: boolean
            pictures:
              type: array
              items:
                $ref: "#/components/schemas/PictureUrl"
    RoomTypeLite:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
    RoomTypeStatus:
      type: string
      description: This enum describes all possible status a room type can be in UpsellGuru
      enum:
        - ONLINE
        - OFFLINE
        - DELETED
    BasicRoomType:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/RoomTypeStatus"
        code:
          type: string
        pmsTransactionCode:
          type: string
          description: Room Type code used to write back to the PMS
        otherPmsCodes:
          type: array
          items:
            type: string
          description: Other room type codes that can be used to identify this room type
        names:
          $ref: "#/components/schemas/LocalizedStringsMap"
        descriptions:
          $ref: "#/components/schemas/LocalizedStringsMap"
        position:
          type: integer
        numberOfRooms:
          type: integer
          description: Number of physical room units belonging to this Room Type
        categoryId:
          type: integer
          description: Room Type category id that the room type belongs to
    ArrayOfExtraType:
      type: array
      items:
        $ref: "#/components/schemas/ExtraType"
    BasicExtraType:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ExtraTypeStatus"
        code:
          type: string
        pmsTransactionCode:
          type: string
        otherPmsCodes:
          type: array
          items:
            type: string
        billingRule:
          $ref: "#/components/schemas/ExtraTypeBillingRule"
        salesType:
          $ref: "#/components/schemas/ExtraTypeSalesType"
        category:
          $ref: "#/components/schemas/ExtraTypeCategory"
        names:
          $ref: "#/components/schemas/LocalizedStringsMap"
        descriptions:
          $ref: "#/components/schemas/LocalizedStringsMap"
        position:
          type: integer
        price:
          $ref: "#/components/schemas/Money"
        strikePrice:
          $ref: "#/components/schemas/Money"
        taxes:
          $ref: "#/components/schemas/Money"
        serviceFee:
          $ref: "#/components/schemas/Money"
        pointOfSale:
          $ref: "#/components/schemas/ExtraTypePointOfSale"
        cutOffDays:
          type: integer
        cutOffHour:
          type: integer
          minimum: 0
          maximum: 23
        excludedDates:
          type: array
          items:
            format: date
        availableDates:
          type: array
          items:
            format: date
        losFrom:
          type: integer
        losTo:
          type: integer
        excludedRatePlans:
          type: array
          items:
            format: string
        allowedRatePlans:
          type: array
          items:
            format: string
        excludedMarketSegments:
          type: array
          items:
            format: string
        allowedMarketSegments:
          type: array
          items:
            format: string
        excludedReservationSources:
          type: array
          items:
            format: string
        allowedReservationSources:
          type: array
          items:
            format: string
        excludedMembershipLevels:
          type: array
          items:
            format: string
        allowedMembershipLevels:
          type: array
          items:
            format: string
        offeredDays:
          $ref: "#/components/schemas/ExtraTypeOfferedDays"
        offeredDaysType:
          $ref: "#/components/schemas/ExtraTypeOfferedDaysType"
        dayTimeConfirmation:
          $ref: "#/components/schemas/ExtraTypeDayTimeConfirmation"
        dayTimeConfirmationSchedule:
          $ref: "#/components/schemas/ExtraTypeDayTimeConfirmationSchedule"
        customQuestion:
          type: string
        isPurchasingMultipleVariationsAllowed:
          type: boolean
    ExtraType:
      allOf:
        - $ref: "#/components/schemas/BasicExtraType"
        - type: object
          properties:
            id:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            hotelId:
              type: integer
            variations:
              type: array
              items:
                $ref: "#/components/schemas/ExtraTypeVariation"
            pictures:
              type: array
              items:
                $ref: "#/components/schemas/PictureUrl"
    ExtraTypeLite:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        category:
          $ref: "#/components/schemas/ExtraTypeCategory"
    ExtraTypeStatus:
      type: string
      description: This enum describes all possible status an extra type can be in UpsellGuru
      enum:
        - ONLINE
        - OFFLINE
        - DELETED
    ExtraTypeBillingRule:
      type: string
      enum:
        - PERSON
        - DAY_PERSON
        - DAY
        - UNIT
        - RESERVATION
    ExtraTypeSalesType:
      type: string
      enum:
        - INSTANT_CONFIRMATION
        - BIDDING
        - ON_REQUEST
    ExtraTypeCategory:
      type: string
      enum:
        - F_AND_B
        - F_AND_B_BREAKFAST
        - F_AND_B_DINNER
        - EXTENDED_STAY
        - EXTENDED_STAY_ECI
        - EXTENDED_STAY_LCO
        - SPA
        - ACTIVITIES
        - TRANSPORTATION
        - ROOM_AMENITIES
        - PACKAGES
        - CLUB_BENEFITS
        - LOYALTY
    ExtraTypePointOfSale:
      type: string
      enum:
        - ALL
        - PRESTAY_ONLY
        - INHOUSE_ONLY
    ExtraTypeOfferedDays:
      type: object
      properties:
        mon:
          type: boolean
        tue:
          type: boolean
        wed:
          type: boolean
        thu:
          type: boolean
        fri:
          type: boolean
        sat:
          type: boolean
        sun:
          type: boolean
    ExtraTypeOfferedDaysType:
      type: string
      enum:
        - CHECKIN
        - STAY
        - CHECKOUT
    ExtraTypeDayTimeConfirmation:
      type: string
      enum:
        - NOT_REQUIRED
        - ANY_TIME
        - SPECIFIC_HOURS
    ExtraTypeDayTimeConfirmationSchedule:
      type: object
      properties:
        hoursFrom:
          type: integer
        hoursTo:
          type: integer
        minutesFrom:
          type: integer
        minutesTo:
          type: integer
    ExtraTypeVariation:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hotelId:
          type: integer
        status:
          $ref: "#/components/schemas/ExtraTypeStatus"
        position:
          type: integer
        code:
          type: string
        pmsTransactionCode:
          type: string
        price:
          $ref: "#/components/schemas/Money"
        names:
          $ref: "#/components/schemas/LocalizedStringsMap"
    HotelAvailability:
      type: object
      properties:
        hotelId:
          type: integer
        availability:
          $ref: "#/components/schemas/ArrayOfRoomTypeAvailability"
    ArrayOfRoomTypeAvailability:
      type: array
      items:
        $ref: "#/components/schemas/RoomTypeAvailability"
    RoomTypeAvailability:
      type: object
      properties:
        roomTypeCode:
          type: string
        date:
          type: string
          format: date
        available:
          type: integer
        booked:
          type: integer
    BasicUser:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/BasicUserStatus"
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        hotelIds:
          type: array
          items:
            type: integer
    User:
      allOf:
        - $ref: "#/components/schemas/BasicUser"
        - type: object
          properties:
            id:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            lastLoginAt:
              type: string
              format: date-time
            status:
              $ref: "#/components/schemas/UserStatus"
    UserAccessToken:
      type: object
      properties:
        accessToken:
          type: string
    ArrayOfUser:
      type: array
      items:
        $ref: "#/components/schemas/User"
    UserStatus:
      type: string
      enum:
        - ACTIVE
        - DELETED
        - PENDING
        - SUSPENDED
        - CONFIRMED
        - TEMP_LOCKED
        - LOCKED
    BasicUserStatus:
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
        - DELETED
    LocalizedStringsMap:
      type: object
      additionalProperties:
        type: string
      example:
        en: "Text in English"
        es: "Texto en español"
        it: "Testo in italiano"
        de: "Text auf Deutsch"
    PictureUrl:
      type: string
      format: url
    ChannelHotelSetup:
      type: object
      properties:
        channelName:
          type: string
        channelHotelIdentifier:
          type: string
    City:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        country:
          $ref: "#/components/schemas/Country"
    Country:
      type: object
      properties:
        id:
          type: integer
        isoCode:
          type: string
        name:
          type: string
    Money:
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
      required:
        - amount
        - currency
    LanguageCode:
      type: string
      enum:
        - EN
        - ES
        - IT
        - FR
        - PT
        - DE
        - GE
        - JP
        - CN
        - RU
        - NL
        - TR
        - PL
        - ID
        - BG
        - CZ
        - ZH
    SaveBookedExtraRequest:
      type: object
      required:
        - hotelId
        - reservationId
        - extraTypeId
        - touchpoint
        - sourceChannel
        - price
        - quantity
      properties:
        hotelId:
          type: integer
          description: The Hotel ID
        reservationId:
          type: integer
          description: The Reservation ID
        extraTypeId:
          type: integer
          description: The Extra Type ID
        variationId:
          type: integer
          description: The Extra Type variation ID
        quantity:
          type: integer
          description: Quantity of the extra being booked
        price:
          type: number
          format: float
          description: Price per unit
        dynamicPricing:
          type: object
          description: Map of variations with their quantities and prices
          required:
            - range
            - roomTypePrice
            - limit
          properties:
            limit:
              type: string
              description: End date for the dynamic pricing
            range:
              type: object
              description: Quantity of the extra being booked
              properties:
                fromHour:
                  type: integer
                  description: Start time (in hours) for applying dynamic pricing rules
                toHour:
                  type: integer
                  description: End time (in hours) for applying dynamic pricing rules
                roomRatePercentage:
                  type: integer
                  description: Room rate percentage used for dynamic pricing
            roomTypePrice:
              type: object
              description: Dynamic pricing details (required only for dynamic pricing model)
              properties:
                amount:
                  type: number
                  format: float
                  description: Price
                currency:
                  type: string
                  description: Currency
        touchpoint:
          $ref: "#/components/schemas/Touchpoint"
        sourceChannel:
          $ref: "#/components/schemas/SourceChannel"
    SaveUpgradeBidRequest:
      type: object
      required:
        - hotelId
        - reservationId
        - roomTypeId
        - amount
        - touchpoint
        - sourceChannel
      properties:
        hotelId:
          type: integer
          description: The Hotel ID
        reservationId:
          type: integer
          description: The Reservation ID
        roomTypeId:
          type: integer
          description: The Room Type ID
        wasHighlightedRoom:
          type: boolean
          description: Room type was previously highlighted
        amount:
          type: number
          format: float
          description: Amount of the upgrade bid
        touchpoint:
          $ref: "#/components/schemas/Touchpoint"
        sourceChannel:
          $ref: "#/components/schemas/SourceChannel"
    Touchpoint:
      type: string
      enum:
        -AT_RESERVATION
        -RESERVATION_CONFIRMATION
        -PRE_ARRIVAL_UPSELLING
        -PRE_ARRIVAL_UPSELLING_REMINDER
        -ALTERNATIVE_UPGRADE
        -REGISTRATION_CARD
        -FRONT_DESK
        -SPA
        -F_AND_B
        -INHOUSE_EXTRAS
        -HOTEL_DIRECTORY
    SourceChannel:
      type: string
      enum:
        -EMAIL
        -SMS
        -WHATSAPP
        -QR_CODE
        -AT_DESK
        -PHONE
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-Api-Key
